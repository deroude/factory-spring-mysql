---
- hosts: 127.0.0.1
  connection: local
  vars:
    project: "{{ lookup('file', 'project.json') | from_json }}"
    group: "{{ (project.attributes|selectattr('name','equalto','group')|first).value }}"
    artifact: "{{ (project.attributes|selectattr('name','equalto','artifact')|first).value }}"
    appName: "{{ (project.attributes|selectattr('name','equalto','name')|first).value }}"
    description: "{{ (project.attributes|selectattr('name','equalto','description')|first).value }}"
    author: "{{ (project.attributes|selectattr('name','equalto','author')|first).value }}"
    basePackage: /target/src/main/java/{{ group| regex_replace('\.','/')}}/{{artifact}}
  tasks:
  - name: write the POM
    template:
      src: pom.xml.j2
      dest: /target/pom.xml
  - name: create src directory
    file:
      path: '{{ basePackage }}'
      state: directory
  - name: write the Base class
    template:
      src: Base.java.j2
      dest: '{{ basePackage }}/{{appName}}.java'
  - name: create domain directory
    file:
      path: '{{ basePackage }}/domain'
      state: directory
  - name: write the Entity classes
    loop: "{{ (project.relations|selectattr('name','equalto','domain')|first).children|list }}"
    vars:
      entity: "{{ item }}"
      fields: "{{ (entity.relations|selectattr('name','equalto','fields')|first).children }}"
    template:
      src: "Entity.java.j2"
      dest: "{{ basePackage }}/domain/{{entity.name}}.java"
  - name: create resources directory
    file:
      path: '/target/src/main/resources'
      state: directory
  - name: write the application.properties
    template:
      src: application.properties.j2
      dest: '/target/src/main/resources/application.properties'