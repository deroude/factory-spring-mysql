package {{project.root.group}}.{{project.root.artifact}}.domain;

import javax.persistence.Basic;
import javax.persistence.Entity;
{% if entity.fields|selectattr("enum","defined")|list|length > 0 %}
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
{% endif %}
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
{% if entity.fields|selectattr("fk","defined")|list|length > 0 %}
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
{% endif %}
{% if entity.fields|rejectattr("type","undefined")|selectattr("type","equalto","Date")|list|length > 0 %}
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import java.util.Date;
{% endif %}

/**
*
* @author {{project.root.author}}
*/
@Entity
public class {{entity.name}} {

{% for field in entity["fields"] %}
{% if 'id' in field %}
    @Id
{% if 'generated' in field %}
    @GeneratedValue(strategy = GenerationType.IDENTITY)
{% endif %}
    private {{field.type}} {{field.name}};
{% endif %}
{% if 'basic' in field %}
    @Basic(optional={{field.optional}})
    private {{field.type}} {{field.name}};
{% endif %}
{% if 'type' in field and field.type == 'Date'%}
    @Basic(optional = {{field.optional}})
    @Temporal(TemporalType.TIMESTAMP)
    private Date {{field.name}};
{% endif %}
{% if 'fk' in field %}
    @ManyToOne(optional = {{field.optional}})
    @JoinColumn(name = "{{field.name}}")
    private {{field.type}} {{field.name}};
{% endif %}
{% if 'enum' in field %}
    public enum {{field.name|capitalize}}Value {
        {{field["values"]|join(',')}}
    };

    @Basic(optional = {{field.optional}})
    @Enumerated(EnumType.STRING)
    private {{field.name|capitalize}}Values {{field.name}};
{% endif %}
{% endfor %}

{% for field in entity["fields"] %}
{% if 'enum' in field %}
    public {{field.name|capitalize}}Value get{{field.name|capitalize}}(){
        return this.{{field.name}};
    }

    public void set{{field.name|capitalize}}({{field.name|capitalize}}Value {{field.name}}){
        this.{{field.name}}={{field.name}};
    }
{% else %}
    public {{field.type}} get{{field.name|capitalize}}(){
        return this.{{field.name}};
    }

    public void set{{field.name|capitalize}}({{field.type}} {{field.name}}){
        this.{{field.name}}={{field.name}};
    }
{% endif %}
{% endfor %}

}